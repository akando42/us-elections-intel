)
response <- content(r, "parsed")
message(response)
logs <- response$items
Recipient <- character()
Timestamp <- numeric()
Status <- character()
email_number <- length(logs)
for(i in 1:length(logs)){
Reci
mailgun_broad_track <- function(domain, begin){
tracking_url <- paste0("https://api.mailgun.net/v3/",domain, "/events")
r <- GET(
tracking_url,
authenticate("api",api_key),
query = list(
begin=begin,
ascending='yes',
limit=300,
pretty='yes'
)
)
response <- content(r, "parsed")
message(response)
logs <- response$items
Recipient <- character()
Timestamp <- numeric()
Status <- character()
email_number <- length(logs)
for(i in 1:length(logs)){
Recipient[i]<- logs[[i]]$recipient
Timestamp[i] <- logs[[i]]$timestamp
Status[i] <- logs[[i]]$event
}
tracking_data <- data.frame(Recipient, Timestamp, Status, stringsAsFactors = FALSE)
tracking_data <- mutate(tracking_data, Datetime = as_datetime(Timestamp))
return(tracking_data)
}
exit
mailgun_broad_track <- function(domain, begin){
tracking_url <- paste0("https://api.mailgun.net/v3/",domain, "/events")
r <- GET(
tracking_url,
authenticate("api",api_key),
query = list(
begin=begin,
ascending='yes',
limit=300,
pretty='yes'
)
)
response <- content(r, "parsed")
message(response)
logs <- response$items
Recipient <- character()
Timestamp <- numeric()
Status <- character()
email_number <- length(logs)
for(i in 1:length(logs)){
Recipient[i]<- logs[[i]]$recipient
Timestamp[i] <- logs[[i]]$timestamp
Status[i] <- logs[[i]]$event
}
tracking_data <- data.frame(Recipient, Timestamp, Status, stringsAsFactors = FALSE)
tracking_data <- mutate(tracking_data, Datetime = as_datetime(Timestamp))
return(tracking_data)
}
data <- mailgun_broad_track("influencerwiz.com", "Mon, 01 April 2019 00:00:01 -0000")
library(httr)
library(plumber)
library(rvest)
library(dplyr)
library(lubridate)
library(zoo)
library(tidyverse)
validation_key <- "pubkey-511bebebd999a57e2bcc4d85f86f0233"
username <- "troy@topflightapps.com"
base_url <- "https://api.mailgun.net/v3/"
api_key <- "key-f8c4ea5af0feb19eb1dabd9733976b79"
domain <- "influencerwiz.com"
data <- mailgun_broad_track("influencerwiz.com", "Mon, 01 April 2019 00:00:01 -0000")
data
View(data)
data <- filter(data, data$Status != "failed")
View(data)
mailgun_chart(data)
data$Hours <- format(data$Datetime, format="%H")
View(data)
mailgun_broad_track <- function(domain, begin){
tracking_url <- paste0("https://api.mailgun.net/v3/",domain, "/events")
r <- GET(
tracking_url,
authenticate("api",api_key),
query = list(
begin=begin,
ascending='yes',
limit=300,
pretty='yes'
)
)
response <- content(r, "parsed")
message(response)
logs <- response$items
Recipient <- character()
Timestamp <- numeric()
Status <- character()
email_number <- length(logs)
for(i in 1:length(logs)){
Recipient[i]<- logs[[i]]$recipient
Timestamp[i] <- logs[[i]]$timestamp
Status[i] <- logs[[i]]$event
}
tracking_data <- data.frame(Recipient, Timestamp, Status, stringsAsFactors = FALSE)
tracking_data <- mutate(tracking_data, Datetime = as_datetime(Timestamp))
tracking_data$Hours <- format( tracking_data$Datetime, format="%H")
return(tracking_data)
}
mailgun_broad_track <- function(domain, begin){
tracking_url <- paste0("https://api.mailgun.net/v3/",domain, "/events")
r <- GET(
tracking_url,
authenticate("api",api_key),
query = list(
begin=begin,
ascending='yes',
limit=300,
pretty='yes'
)
)
response <- content(r, "parsed")
message(response)
logs <- response$items
Recipient <- character()
Timestamp <- numeric()
Status <- character()
email_number <- length(logs)
for(i in 1:length(logs)){
Recipient[i]<- logs[[i]]$recipient
Timestamp[i] <- logs[[i]]$timestamp
Status[i] <- logs[[i]]$event
}
tracking_data <- data.frame(Recipient, Timestamp, Status, stringsAsFactors = FALSE)
tracking_data <- mutate(tracking_data, Datetime = as_datetime(Timestamp))
tracking_data$Hours <- format( tracking_data$Datetime, format="%H")
return(tracking_data)
}
data <- mailgun_broad_track("influencerwiz.com", "Mon, 01 April 2019 00:00:01 -0000")
View(data)
mailgun_chart(data)
# Track Emal Sent, Delivered, Open and Click by Recipients
mailgun_targeted_track <- function(domain, recipient, begin){
tracking_url <- paste0("https://api.mailgun.net/v3/",domain, "/events")
r <- GET(
tracking_url,
authenticate("api",api_key),
query = list(
begin=begin,
ascending='yes',
limit=300,
pretty='yes',
recipient=recipient
)
)
response <- content(r, "parsed")
message(response)
logs <- response$items
Recipient <- character()
Timestamp <- numeric()
Status <- character()
email_number <- length(logs)
for(i in 1:length(logs)){
Recipient[i]<- logs[[i]]$recipient
Timestamp[i] <- logs[[i]]$timestamp
Status[i] <- logs[[i]]$event
}
tracking_data <- data.frame(Recipient, Timestamp, Status, stringsAsFactors = FALSE)
tracking_data <- mutate(tracking_data, Datetime = as_datetime(Timestamp))
tracking_data$Hours <- format( tracking_data$Datetime, format="%H")
tracking_data$Date <- format(tracking_data$Datetime, format="%d")
return(tracking_data)
}
mailgun_broad_track <- function(domain, begin){
tracking_url <- paste0("https://api.mailgun.net/v3/",domain, "/events")
r <- GET(
tracking_url,
authenticate("api",api_key),
query = list(
begin=begin,
ascending='yes',
limit=300,
pretty='yes'
)
)
response <- content(r, "parsed")
message(response)
logs <- response$items
Recipient <- character()
Timestamp <- numeric()
Status <- character()
email_number <- length(logs)
for(i in 1:length(logs)){
Recipient[i]<- logs[[i]]$recipient
Timestamp[i] <- logs[[i]]$timestamp
Status[i] <- logs[[i]]$event
}
tracking_data <- data.frame(Recipient, Timestamp, Status, stringsAsFactors = FALSE)
tracking_data <- mutate(tracking_data, Datetime = as_datetime(Timestamp))
tracking_data$Hours <- format( tracking_data$Datetime, format="%H")
tracking_data$Date <- format(tracking_data$Datetime, format="%d")
return(tracking_data)
}
data <- mailgun_broad_track("influencerwiz.com", "Mon, 01 April 2019 00:00:01 -0000")
View(data)
mailgun_daily_chart <- function(data){
start_hour <- min(data$Date)
end_hour <- max(data$Date)
email_chart_data <- data.frame(hour=numeric(), received=numeric(), opened=numeric())
for (i in start_hour:end_hour){
print(class(i))
email <- filter(data, data$Date == i)
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, hour=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$Date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Received", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
mailgun_daily_chart(data)
View(data)
mailgun_daily_chart(data)
mailgun_daily_chart <- function(data){
start_date <- min(data$Date)
end_date <- max(data$Date)
email_chart_data <- data.frame(date=numeric(), received=numeric(), opened=numeric())
for (i in start_hour:end_hour){
print(class(i))
email <- filter(data, data$Date == i)
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Received", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
mailgun_daily_chart(data)
View(data)
min(data$Date)
max(data$Date)
mailgun_daily_chart <- function(data){
start_date <- min(data$Date)
end_date <- max(data$Date)
email_chart_data <- data.frame(date=numeric(), received=numeric(), opened=numeric())
for (i in start_date:end_date){
print(class(i))
email <- filter(data, data$Date == i)
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Received", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
mailgun_daily_chart(data)
mailgun_daily_chart <- function(data){
start_date <- min(data$Date)
end_date <- max(data$Date)
email_chart_data <- data.frame(date=numeric(), received=numeric(), opened=numeric())
for (i in start_date:end_date){
print(i)
email <- filter(data, data$Date == i)
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Received", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
mailgun_daily_chart(data)
mailgun_chart(data)
mailgun_daily_chart(data)
for (i in start_date:end_date){
email <- filter(data, data$Date == i)
print(i, nrow(email))
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
mailgun_daily_chart <- function(data){
start_date <- min(data$Date)
end_date <- max(data$Date)
email_chart_data <- data.frame(date=numeric(), received=numeric(), opened=numeric())
for (i in start_date:end_date){
email <- filter(data, data$Date == i)
print(i, nrow(email))
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Received", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
mailgun_daily_chart(data)
print(nrow(email)))
mailgun_daily_chart <- function(data){
start_date <- min(data$Date)
end_date <- max(data$Date)
email_chart_data <- data.frame(date=numeric(), received=numeric(), opened=numeric())
for (i in start_date:end_date){
email <- filter(data, data$Date == i)
print(i)
print(nrow(email))
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Received", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
print(nrow(email)))
mailgun_daily_chart <- function(data){
start_date <- min(data$Date)
end_date <- max(data$Date)
email_chart_data <- data.frame(date=numeric(), received=numeric(), opened=numeric())
for (i in start_date:end_date){
email <- filter(data, data$Date == i)
print(i)
print(nrow(email))
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Received", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
print(nrow(email)))
mailgun_daily_chart(data)
format(1, digits=2)
format(1, digits=4)
formatC(1, width = 2)
formatC(1, width = 2, flag="0")
formatC(11, width = 2, flag="0")
mailgun_daily_chart <- function(data){
start_date <- min(data$Date)
end_date <- max(data$Date)
email_chart_data <- data.frame(date=numeric(), received=numeric(), opened=numeric())
for (i in start_date:end_date){
email <- filter(data, data$Date == formatC(i, width=2, flag="0"))
print(i)
print(nrow(email))
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Received", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
mailgun_daily_chart(data)
mailgun_daily_chart <- function(data){
start_date <- min(data$Date)
end_date <- max(data$Date)
email_chart_data <- data.frame(date=numeric(), received=numeric(), opened=numeric())
for (i in start_date:end_date){
email <- filter(data, data$Date == formatC(i, width=2, flag="0"))
print(i)
print(nrow(email))
tryCatch(received <- email %>% filter(email$Status =="accepted") %>% nrow(),error=function(){return(received <- 0)})
tryCatch(opened <- email %>% filter(email$Status == "opened") %>% nrow(), error=function(){return(opened <- 0)})
email_chart_data <- add_row(email_chart_data, date=i, received=received, opened=opened)
}
hc <- highchart() %>%
hc_xAxis(categories = email_chart_data$date) %>%
hc_add_series(name = "Opened", data = email_chart_data$opened) %>%
hc_add_series(name = "Sent", data = email_chart_data$received) %>%
hc_add_theme(hc_theme_chalk()) %>%
hc_title(text="Yasware Email Stats")
return(hc)
}
mailgun_daily_chart(data)
?filter
?select
?select
library(tidyverse)
?select
1:10 %in% c(1,3,5,9)
?filter
?select
setwd("~/Desktop/Melior")
setwd("~/Desktop/Melior")
library(tweetR)
library(twitteR)
library(twitteR)
twitter_api_key <- "KB6l8VvI55feXS2OMuhBFHzQG"
twitter_api_secret <- "VNV26E12wzIT18mOZkWpIc8HkzMFE719mrCn4fnLoKRkK1o2d0"
twitter_access_token <- "432138255-Fq1KA00FKusSmuXNCY2n3jnirvuU3DjhMXHlminw"
twitter_access_secret <- "iYWbMOyLF6hLZ73inEoycud37eo7Ph6dKIl0kz2lHBk9b"
## Getting Data from Twitter
result <- setup_twitter_oauth(twitter_api_key, twitter_api_secret)
library(plumber)
r <- plumb("api.R")
r$run(port=8000)
library(plumber)
r <- plumb("api.R")
r$run(port=8000)
library(plumber)
r <- plumb("api.R")
r$run(port=8000)
library(plumber)
r <- plumb("Api.R")
r$run(port=8000)
clear
ls
library(plumber)
r <- plumb("Api.R")
r$run(port=8000)
library(plumber)
r <- plumb("Api.R")
r$run(port=8000)
library(plumber)
r <- plumb("Api.R")
r$run(port=8000)
library(plumber)
r <- plumb("Services.R")
r$run(port=7777)
library(plumber)
r <- plumb("Services.R")
r$run(port=7777)
library(plumber)
r <- plumb("Services.R")
r$run(port=7777)
library(plumber)
r <- plumb("Services.R")
r$run(port=7777)
library(plumber)
RServer <- plumb("Services.R")
RServer$run(port=7777)
library(plumber)
RServer <- plumb("Services.R")
setwd("~/Desktop/Melior")
RServer <- plumb("Services.R")
RServer <- plumb("Services.R")
RServer <- plumb("Services.R")
library(plumber)
RServer <- plumb("Services.R")
install.packages("plumber")
library(plumber)
RServer <- plumb("Services.R")
#* Return the sum of two numbers
#* @param from Sender email address
#* @param to Receiver email address
#* @param subject Subject of the email
#* @param html_body Html email template
#* @post /mailgun_send
function(from, to, subject, html_body){
mailgun_send(from, to, subject, html_body)
}
RServer <- plumb("Services.R")
RServer <- plumb("Services.R")
r <- plumb("Services.R")
RServer <- plumb("Services.R")
r <- plumb("Services.R")
RServer <- plumb("Services.R")
library(plumber)
r <- plumb("Services.R")
r$run(port=7777)
library(plumber)
s <- plumb("Services.R")
s$run(port=7777)
library(plumber)
server <- plumb("Services.R")
server$run(port=7777)
server <- plumb("Services.R")
server$run(port=7777)
